apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.publicarttrail.googlemapspractice"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.google.maps.android:android-maps-utils:0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation("com.android.support.test.uiautomator:uiautomator-v18:2.1.1", {
        exclude group: "com.android.support", module: "support-annotations"
    })

    task enableMockLocationForTestsOnDevice(type: Exec) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def sdkDir = properties.getProperty('sdk.dir')
        def adb = "$sdkDir/platform-tools/adb"
        description 'enable mock location on connected android device before executing any android test'
        commandLine "$adb", 'shell', 'appops', 'set', 'indian.fig.whatsaround', 'android:mock_location', 'allow'
    }

    afterEvaluate {
        // Note: the app must be already installed on device in order to this to run!
        connectedDebugAndroidTest.dependsOn enableMockLocationForTestsOnDevice
        connectedAndroidTest.dependsOn enableMockLocationForTestsOnDevice
    }


// execute android tests before realising a new apk
    tasks.whenTaskAdded { task ->
        if (task.name == 'assembleRelease') {
            task.dependsOn('enableMockLocationForTestsOnDevice')
            task.dependsOn('testReleaseUnitTest') // Run unit tests for the release build
            task.dependsOn('connectedAndroidTest') // Installs and runs instrumentation tests for all flavors on connected devices.

        }
    }

}
